#include <stdio.h>
#include <string.h>
#include <ctype.h>
#define SIZE 5
void preprocess(char *input) {
    int i, j = 0;
    for (i = 0; input[i] != '\0'; i++)
        if (isalpha(input[i])) input[j++] = toupper(input[i]);
    input[j] = '\0';
}
void generateMatrix(char matrix[SIZE][SIZE], char *key) {
    int i, j, k = 0;
    char alpha[26] = {0};
    for (i = 0; i < strlen(key); i++) {
        if (!alpha[key[i] - 'A'] && key[i] != 'J') {
            matrix[k / SIZE][k % SIZE] = key[i];
            alpha[key[i] - 'A'] = 1;
            k++;
        }
    }
    for (i = 0; i < 26; i++) {
        if (!alpha[i] && i != ('J' - 'A')) {
            matrix[k / SIZE][k % SIZE] = 'A' + i;
            k++;
        }
    }
}
void findPos(char matrix[SIZE][SIZE], char ch, int *row, int *col) {
    for (*row = 0; *row < SIZE; (*row)++)
        for (*col = 0; *col < SIZE; (*col)++)
            if (matrix[*row][*col] == ch) return;
}
void encryptPair(char matrix[SIZE][SIZE], char a, char b, char *result) {
    int rowA, colA, rowB, colB;
    findPos(matrix, a, &rowA, &colA);
    findPos(matrix, b, &rowB, &colB);
    if (rowA == rowB) {
        result[0] = matrix[rowA][(colA + 1) % SIZE];
        result[1] = matrix[rowB][(colB + 1) % SIZE];
    } else if (colA == colB) {
        result[0] = matrix[(rowA + 1) % SIZE][colA];
        result[1] = matrix[(rowB + 1) % SIZE][colB];
    } else {
        result[0] = matrix[rowA][colB];
        result[1] = matrix[rowB][colA];
    }
}
void playfairEncrypt(char matrix[SIZE][SIZE], char *input, char *output) {
    int i, j = 0;
    char a, b;
    for (i = 0; i < strlen(input); i += 2) {
        a = input[i], b = (input[i + 1] == '\0') ? 'X' : input[i + 1];
        encryptPair(matrix, a, b, &output[j]), j += 2;
}
    output[j] = '\0';
}
int main() {
    char matrix[SIZE][SIZE], key[50], input[100], output[100];
    printf("Enter key: "), scanf("%s", key);
    printf("Enter plaintext: "), getchar(), fgets(input, sizeof(input), stdin);
    preprocess(input), generateMatrix(matrix, key), playfairEncrypt(matrix, input, output);
    printf("Encrypted text: %s\n", output);
    return 0;
}
