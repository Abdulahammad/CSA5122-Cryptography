#include <stdio.h>
#include <string.h>

#define MAX_ROWS 10

void encrypt(char *plaintext, int rails, char *ciphertext) {
    int len = strlen(plaintext);
    int rail = 0;
    int row = 0;
    int dir_down = 0;

    // Create the fence
    char fence[MAX_ROWS][len];
    memset(fence, '\0', sizeof(fence));

    // Fill the fence
    for (int i = 0; i < len; i++) {
        fence[row][i] = plaintext[i];

        // If we've reached the top or bottom rail, change direction
        if (row == 0 || row == rails - 1)
            dir_down = !dir_down;

        // Move to the next rail based on direction
        if (dir_down)
            row++;
        else
            row--;
    }

    // Extract ciphertext from the fence
    int idx = 0;
    for (int i = 0; i < rails; i++) {
        for (int j = 0; j < len; j++) {
            if (fence[i][j] != '\0') {
                ciphertext[idx++] = fence[i][j];
            }
        }
    }
    ciphertext[idx] = '\0';
}

int main() {
    char plaintext[100], ciphertext[100];
    int rails;

    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);

    printf("Enter the number of rails: ");
    scanf("%d", &rails);

    encrypt(plaintext, rails, ciphertext);

    printf("Encrypted ciphertext: %s\n", ciphertext);

    return 0;
}
